## Lesson 2 OK02
### October 6, 2013

Today we do lesson 2.

The green LED light blinks on and off as expected.

These are the interesting bits:

```
mov r2,#0x3F0000
wait1$:
  sub r2,#1
  cmp r2,#0
  bne wait1$

str r1,[r0,#28]

mov r2,#0x3F0000
wait2$:
  sub r2,#1
  cmp r2,#0
  bne wait2$
```

Checking with solution, the code works pretty nice. 

### Lesson 3 OK03

I went ahead and did lesson 3.

In Lesson 3, we learn a bit more about the functions. Overall this one was not
bad. Here is relevant code.

```
/* NEW
 * Use our new SetGpioFunction function to set the function of GPIO port 16 (OK 
 * LED) to 001 (binary)
 */
pinNum .req r0
pinFunc .req r1
mov pinNum,#16
mov pinFunc,#1
bl SetGpioFunction
.unreq pinNum
.unreq pinFunc

/* NEW
 * Use our new SetGpio function to set GPIO 16 to low, causing the LED to turn 
 * on.
 */
loop$:
pinNum .req r0
pinVal .req r1
mov pinNum,#16
mov pinVal,#0
bl SetGpio
.unreq pinNum
.unreq pinVal

/*
 * Now, to create a delay, we busy the processor on a pointless quest to 
 * decrement the number 0x3F0000 to 0!
 */
decr .req r0
mov decr,#0x3F0000
wait1$: 
  sub decr,#1
  teq decr,#0
  bne wait1$
.unreq decr

/* NEW
 * Use our new SetGpio function to set GPIO 16 to high, causing the LED to turn 
 * on.
 */
pinNum .req r0
pinVal .req r1
mov pinNum,#16
mov pinVal,#1
bl SetGpio
.unreq pinNum
.unreq pinVal

/*
 * Wait once more.
 */
decr .req r0
mov decr,#0x3F0000
wait2$:
  sub decr,#1
  teq decr,#0
  bne wait2$
.unreq decr
```


