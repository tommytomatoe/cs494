--------------------------------------------------------------------------------

                                  Prerequisites

The following programs are required to compile Embedded Xinu:

- GNU make
- gcc and binutils targetting the desired platform.  These generally will need
  to be specially configured to target a platform other than the one you run
  them on (i.e. configured as a "cross compiler").  You may be able to use
  clang instead of gcc but we haven't tested it much.

--------------------------------------------------------------------------------

                              Makefile variables

Compiling Embedded Xinu requires running 'make' to process the Makefile in this
directory.  However, there are a number of ways you can customize the build.  At
minimum you must set PLATFORM, as described below, to select the platform to
target.

The following Makefile variables can be set or overridden on the command line:

* PLATFORM specifies the name of a directory in platforms/ that is the Embedded
  Xinu platform for which to build the kernel.

* COMPILER_ROOT specifies the location of the executables for the compiler and
  binutils necessary to compile, assemble, and link code for the target
  platform.  COMPILER_ROOT must include any target prefix that the executables
  may be prefixed with.  Example for ARM-based platforms:
  "/opt/arm-dev/bin/arm-none-eabi-".  Or, if the executables are on your $PATH,
  you could simply specify, for example, "arm-none-eabi-"; however, that is in
  fact already the default.

* DETAIL can be defined as "-DDETAIL" to enable certain debugging messages in
  Embedded Xinu.

* VERBOSE can be defined to any value to print the actual command lines executed
  when compiling, linking, assembling, etc.

To override any of the above variables, you must pass it as an argument to
'make', like in the following example:

    $ make PLATFORM=arm-rpi

--------------------------------------------------------------------------------

                                Makefile targets

The following Makefile targets are available:

* xinu.boot
    Compile Embedded Xinu normally.  This is the default target.

* debug
    Same as xinu.boot, but include debugging information.

* indent
    Indent all C source files in Embedded Xinu with a consistent indentation
    style.

* docs
    Generate the Doxygen documentation for Embedded Xinu.  This requires that
    Doxygen is installed.  Note: to eliminate irrelevant details in the
    documentation, the documentation is parameterized by platform; therefore,
    the exact documentation that's generated will depend on the current setting
    of PLATFORM (see "Makefile variables" section above).

* clean
    Remove all object files.

* docsclean
    Remove documentation generated by `make docs'.

* realclean
    Remove all generated files of any kind.

The above covers the important targets, but see the Makefile for a few
additional targets that are available.

Older versions of Embedded Xinu had a `make depend' target to generate header
dependency information.  This has been removed because this information is now
generated automatically.  That is, if you modify a header, the appropriate
source files will now be recompiled automatically.

--------------------------------------------------------------------------------
